[
  {
    "description": "switch keyword validation",
    "schema": {
      "switch": [
        { "if": { "minimum": 10 }, "then": { "multipleOf": 2 } }
      ]
    },
    "tests": [
      {
        "description": ">= 10 and even is valid",
        "data": 12,
        "valid": true
      },
      {
        "description": ">= 10 and odd is invalid",
        "data": 11,
        "valid": false
      },
      {
        "description": "< 10 is valid",
        "data": 9,
        "valid": true
      }
    ]
  },
  {
    "description": "switch keyword with then clause boolean",
    "schema": {
      "switch": [
        { "if": { "minimum": 10 }, "then": { "multipleOf": 2 } },
        { "if": { "maximum": 4 }, "then": false }
      ]
    },
    "tests": [
      {
        "description": ">=10 and even is valid",
        "data": 12,
        "valid": true
      },
      {
        "description": ">=10 and odd is invalid",
        "data": 11,
        "valid": false
      },
      {
        "description": "<10 is valid",
        "data": 7,
        "valid": true
      },
      {
        "description": "<4 is invalid",
        "data": 3,
        "valid": false
      }
    ]
  },
  {
    "description": "switch keyword with single then clause schema",
    "schema": {
      "switch": [
        { "if": { "maximum": 10 }, "then": { "multipleOf": 2 } },
        { "then": { "multipleOf": 5 } }
      ]
    },
    "tests": [
      {
        "description": "<=10 and even is valid",
        "data": 8,
        "valid": true
      },
      {
        "description": "<=10 and odd is invalid",
        "data": 7,
        "valid": false
      },
      {
        "description": ">10 and mulitple of 5 is valid",
        "data": 15,
        "valid": true
      },
      {
        "description": ">10 and not mulitple of 5 is invalid",
        "data": 17,
        "valid": false
      }
    ]
  },
  {
    "description": "switch keyword with single then clause boolean",
    "schema": {
      "description": "positive integer <=1000 with one non-zero digit",
      "switch": [
        { "if": { "not": { "minimum": 1 } }, "then": false },
        { "if": { "maximum": 10 }, "then": true },
        { "if": { "maximum": 100 }, "then": { "multipleOf": 10 } },
        { "if": { "maximum": 1000 }, "then": { "multipleOf": 100 } },
        { "then": false }
      ]
    },
    "tests": [
      {
        "description": "1 is valid",
        "data": 1,
        "valid": true
      },
      {
        "description": "0 is invalid (no positive)",
        "data": 0,
        "valid": false
      },
      {
        "description": "-1 is invalid (negative)",
        "data": -1,
        "valid": false
      },
      {
        "description": "8 is valid",
        "data": 8,
        "valid": true
      },
      {
        "description": "9 is valid",
        "data": 9,
        "valid": true
      },
      {
        "description": "10 is valid",
        "data": 10,
        "valid": true
      },
      {
        "description": "80 is valid",
        "data": 80,
        "valid": true
      },
      {
        "description": "90 is valid",
        "data": 90,
        "valid": true
      },
      {
        "description": "100 is valid",
        "data": 100,
        "valid": true
      },
      {
        "description": "85 is invalid (not multiple of 10)",
        "data": 85,
        "valid": false
      },
      {
        "description": "800 is valid",
        "data": 800,
        "valid": true
      },
      {
        "description": "900 is valid",
        "data": 900,
        "valid": true
      },
      {
        "description": "1000 is valid",
        "data": 1000,
        "valid": true
      },
      {
        "description": "850 is invalid (not multiple of 100)",
        "data": 850,
        "valid": false
      },
      {
        "description": "> 1000 is invalid",
        "data": 1001,
        "valid": false
      }
    ]
  },
  {
    "description": "switch keyword with continue clause",
    "schema": {
      "switch": [
        { "if": { "minimum": 10 }, "then": { "multipleOf": 2 }, "continue": true },
        { "if": { "minimum": 20 }, "then": { "multipleOf": 5 } }
      ]
    },
    "tests": [
      {
        "description": "<10 is valid",
        "data": 7,
        "valid": true
      },
      {
        "description": ">=10, <20 and even is valid",
        "data": 12,
        "valid": true
      },
      {
        "description": ">=10, <20 and odd is invalid",
        "data": 11,
        "valid": false
      },
      {
        "description": ">=20 and multiple of 2 and 5 is valid",
        "data": 30,
        "valid": true
      },
      {
        "description": ">=20 and not multiple of 2 is invalid",
        "data": 35,
        "valid": false
      },
      {
        "description": ">=20 and not multiple of 5 is invalid",
        "data": 36,
        "valid": false
      }
    ]
  },
  {
    "description": "switch keyword with id in sibling subschema",
    "schema": {
      "id": "http://example.com/base_switch",
      "switch": [
        {
          "if": {
            "id": "http://example.com/if",
            "minimum": 10
          },
          "then": { "$ref": "#/definitions/def" }
        }
      ],
      "definitions": {
        "def": { "multipleOf": 2 }
      }
    },
    "tests": [
      {
        "description": ">= 10 and even is valid",
        "data": 12,
        "valid": true
      },
      {
        "description": ">= 10 and odd is invalid",
        "data": 11,
        "valid": false
      },
      {
        "description": "< 10 is valid",
        "data": 9,
        "valid": true
      }
    ]
  }
]
