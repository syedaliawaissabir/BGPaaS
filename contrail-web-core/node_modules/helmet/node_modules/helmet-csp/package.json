{
  "name": "helmet-csp",
  "author": {
    "name": "Adam Baldwin",
    "email": "baldwin@andyet.net",
    "url": "http://andyet.net/team/baldwin"
  },
  "contributors": [
    {
      "name": "Evan Hahn",
      "email": "me@evanhahn.com",
      "url": "http://evanhahn.com"
    }
  ],
  "description": "Content Security Policy middleware.",
  "version": "0.3.0",
  "license": "MIT",
  "keywords": [
    "helmet",
    "security",
    "express",
    "connect",
    "content",
    "security",
    "policy",
    "csp",
    "xss"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/helmetjs/csp.git"
  },
  "bugs": {
    "url": "https://github.com/helmetjs/csp/issues"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "camelize": "1.0.0",
    "content-security-policy-builder": "0.2.0",
    "lodash.isstring": "3.0.1",
    "lodash.pick": "3.1.0",
    "platform": "1.3.0"
  },
  "devDependencies": {
    "connect": "^3.3.5",
    "lodash": "^3.7.0",
    "mocha": "^2.2.1",
    "supertest": "^0.15.0"
  },
  "readme": "Content Security Policy middleware\n==================================\n\n[![Build Status](https://travis-ci.org/helmetjs/csp.svg?branch=master)](https://travis-ci.org/helmetjs/csp)\n\nContent Security Policy helps prevent unwanted content being injected into your webpages; this can mitigate XSS vulnerabilities, unintended frames, malicious frames, and more. If you want to learn how CSP works, check out the fantastic [HTML5 Rocks guide](http://www.html5rocks.com/en/tutorials/security/content-security-policy/), the [Content Security Policy Reference](http://content-security-policy.com/), and the [Content Security Policy specification](http://www.w3.org/TR/CSP/).\n\nUsage:\n\n```javascript\nvar csp = require('helmet-csp');\n\napp.use(csp({\n  // Specify directives as normal\n  defaultSrc: [\"'self'\", 'default.com'],\n  scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n  styleSrc: ['style.com'],\n  imgSrc: ['img.com', 'data:'],\n  sandbox: ['allow-forms', 'allow-scripts'],\n  reportUri: '/report-violation',\n\n  // Set to an empty array to allow nothing through\n  objectSrc: [],\n\n  // Set to true if you only want browsers to report errors, not block them\n  reportOnly: false,\n\n  // Set to true if you want to blindly set all headers: Content-Security-Policy,\n  // X-WebKit-CSP, and X-Content-Security-Policy.\n  setAllHeaders: false,\n\n  // Set to true if you want to disable CSP on Android.\n  disableAndroid: false,\n\n  // Set to true if you want to force buggy CSP in Safari 5.1 and below.\n  safari5: false\n}));\n```\n\nYou can specify keys in a camel-cased fashion (`imgSrc`) or dashed (`img-src`); they are equivalent. The following directives are allowed:\n\n* `baseUri`\n* `childSrc`\n* `connectSrc`\n* `defaultSrc`\n* `fontSrc`\n* `formAction`\n* `frameAncestors`\n* `frameSrc`\n* `imgSrc`\n* `manifestSrc`\n* `mediaSrc`\n* `objectSrc`\n* `pluginTypes`\n* `reportUri`\n* `sandbox`\n* `scriptSrc`\n* `styleSrc`\n* `upgradeInsecureRequests`\n\nThere are a lot of inconsistencies in how browsers implement CSP. Helmet sniffs the user-agent of the browser and sets the appropriate header and value for that browser. If no user-agent is matched, it will set _all_ the headers with the 2.0 spec.\n\nHandling CSP violations\n-----------------------\n\nIf you've specified a `reportUri`, browsers will POST any CSP violations to your server. Here's a simple example of a route that handles those reports:\n\n```js\n// You need a JSON parser first.\napp.use(bodyParser.json());\n\napp.post('/report-violation', function (req, res) {\n  if (req.body) {\n    console.log('CSP Violation: ', req.body);\n  } else {\n    console.log('CSP Violation: No data received!');\n  }\n  res.status(204).end();\n});\n```\n\nNot all browsers send CSP violations the same.\n\n*Note*: If you're using a CSRF module like [csurf](https://github.com/expressjs/csurf), you might have problems handling these violations without a valid CSRF token. The fix is to put your CSP report route *above* csurf middleware.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/helmetjs/csp",
  "_id": "helmet-csp@0.3.0",
  "_from": "helmet-csp@0.3.0"
}
